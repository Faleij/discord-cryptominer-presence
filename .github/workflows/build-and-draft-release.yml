on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Build and draft release

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set env
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF#refs/*/} >> $GITHUB_ENV
          echo "BUILD_NAME=discord-cryptominer-presence_win64-${{ env.RELEASE_VERSION }}" >> $GITHUB_ENV
      
      - name: Install NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      - name: Install OS applications
        run: sudo apt-get update && sudo apt-get install zip libdigest-sha3-perl

      - name: Install deps
        run: npm ci
      
      - name: Build
        run: npm run build release
      
      - name: Create Build Archive
        run: cd dist && zip -r ${{ env.BUILD_NAME }}.zip .

      - name: Print SHA3 Sums
        run: cd dist && find . -type f -print0 | xargs -0 sha3sum
      
      - name: Create SHA3 file for archive
        id: sha3-hash
        run: cd dist && sha3sum ${{ env.BUILD_NAME }}.zip > ${{ env.BUILD_NAME }}.sha3 && echo '::set-output name=sha3::$(<${{ env.BUILD_NAME }}.sha3)'

      - name: Draft Release
        id: create_release
        uses: zendesk/action-create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          release_name: ${{ env.RELEASE_VERSION }}
          body: \n${{ steps.sha3-hash.outputs.sha3 }}
          draft: true
          prerelease: false
      
      - name: Upload win64 artifact
        id: upload-win64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./dist/${{ env.BUILD_NAME }}.zip
          asset_name: ${{ env.BUILD_NAME }}.zip
          asset_content_type: application/zip
      
      - name: Upload win64 artifact SHA3
        id: upload-win64-sha3
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./dist/${{ env.BUILD_NAME }}.sha3
          asset_name: ${{ env.BUILD_NAME }}.sha3
          asset_content_type: text/plain
